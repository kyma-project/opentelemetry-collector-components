singleton_receiver_creator/default:
  leader_election:
    lease_name: foo
    lease_namespace: bar
  receiver:
    dummy:
singleton_receiver_creator/missing_name:
  leader_election:
    lease_namespace: bar
  receiver:
    dummy:
singleton_receiver_creator/missing_namespace:
  leader_election:
    lease_name: foo
  receiver:
    dummy:
singleton_receiver_creator/zero_lease_duration:
  leader_election:
    lease_name: foo
    lease_namespace: bar
    lease_duration: 0s
  receiver:
    dummy:
singleton_receiver_creator/zero_renew_deadline:
  leader_election:
    lease_name: foo
    lease_namespace: bar
    renew_deadline: 0s
  receiver:
    dummy:
singleton_receiver_creator/zero_retry_period:
  leader_election:
    lease_name: foo
    lease_namespace: bar
    retry_period: 0s
  receiver:
    dummy:
singleton_receiver_creator/complex_subreceiver:
  auth_type: serviceAccount
  leader_election:
    lease_name: foo
    lease_namespace: bar
    lease_duration: 15s
    renew_deadline: 10s
    retry_period: 2s
  receiver:
    k8s_cluster:
      auth_type: serviceAccount
      node_conditions_to_report: [ Ready, MemoryPressure ]
      allocatable_types_to_report: [ cpu, memory ]
      metrics:
        k8s.container.cpu_limit:
          enabled: false
      resource_attributes:
        container.id:
          enabled: false
singleton_receiver_creator/auth_type_kubeconfig:
  auth_type: kubeConfig
  leader_election:
    lease_name: foo
    lease_namespace: bar
    lease_duration: 15s
    renew_deadline: 10s
    retry_period: 2s
  receiver:
    k8s_cluster:
      auth_type: serviceAccount
      node_conditions_to_report: [ Ready, MemoryPressure ]
      allocatable_types_to_report: [ cpu, memory ]
      metrics:
        k8s.container.cpu_limit:
          enabled: false
      resource_attributes:
        container.id:
          enabled: false
